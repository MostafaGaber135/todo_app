{
    "sourceFile": "lib/auth/forgot_password.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1730727985338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730727991439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,8 +141,8 @@\n \r\n   void _navigateToSignIn() {\r\n     Navigator.pushReplacement(\r\n       context,\r\n-      MaterialPageRoute(builder: (context) => const LoginPage()),\r\n+      MaterialPageRoute(builder: (context) => const Logins()),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1730728007398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,10 +139,10 @@\n     );\r\n   }\r\n \r\n   void _navigateToSignIn() {\r\n-    Navigator.pushReplacement(\r\n+    Navigator.pushReplacementNamed(\r\n       context,\r\n-      MaterialPageRoute(builder: (context) => const Logins()),\r\n+      MaterialPageRoute(builder: (context) => const LoginsC()),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1730728033590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,10 +139,9 @@\n     );\r\n   }\r\n \r\n   void _navigateToSignIn() {\r\n-    Navigator.pushReplacementNamed(\r\n-      context,\r\n-      MaterialPageRoute(builder: (context) => const LoginsC()),\r\n-    );\r\n+    Navigator.of(context).pushReplacementNamed(\r\n+            HomeScreen.routeName,\r\n+          );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1730728044444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,8 +140,8 @@\n   }\r\n \r\n   void _navigateToSignIn() {\r\n     Navigator.of(context).pushReplacementNamed(\r\n-            HomeScreen.routeName,\r\n+            LoginScreen.routeName,\r\n           );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1730729650291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:flutter/material.dart';\r\n import 'package:firebase_auth/firebase_auth.dart';\r\n+import 'package:todo_app/auth/login_screen.dart';\r\n \r\n class ForgotPassword extends StatefulWidget {\r\n   const ForgotPassword({super.key});\r\n \r\n"
                },
                {
                    "date": 1730729686942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n \r\n class ForgotPassword extends StatefulWidget {\r\n   const ForgotPassword({super.key});\r\n \r\n+  static const String routeName = '/register';\r\n   @override\r\n   State<ForgotPassword> createState() => _ForgotPasswordState();\r\n }\r\n \r\n"
                },
                {
                    "date": 1730729695596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,9 @@\n import 'package:todo_app/auth/login_screen.dart';\r\n \r\n class ForgotPassword extends StatefulWidget {\r\n   const ForgotPassword({super.key});\r\n-\r\n-  static const String routeName = '/register';\r\n+  static const String routeName = '/forgot-password';\r\n   @override\r\n   State<ForgotPassword> createState() => _ForgotPasswordState();\r\n }\r\n \r\n"
                },
                {
                    "date": 1730730261723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n       canPop: false,\r\n-      onPopInvoked: (didPop) {\r\n+      on: (didPop) {\r\n         return;\r\n       },\r\n       child: Scaffold(\r\n         appBar: AppBar(\r\n"
                },
                {
                    "date": 1730730267161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n       canPop: false,\r\n-      on: (didPop) {\r\n+      onPopInvokedWithResult: (didPop) {\r\n         return;\r\n       },\r\n       child: Scaffold(\r\n         appBar: AppBar(\r\n"
                },
                {
                    "date": 1730730349006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n       canPop: false,\r\n       onPopInvokedWithResult: (didPop) {\r\n-        return;\r\n+        return true;\r\n       },\r\n       child: Scaffold(\r\n         appBar: AppBar(\r\n           automaticallyImplyLeading: false,\r\n"
                },
                {
                    "date": 1730730364906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n       canPop: false,\r\n       onPopInvokedWithResult: (didPop) {\r\n-        return true;\r\n+        return false;\r\n       },\r\n       child: Scaffold(\r\n         appBar: AppBar(\r\n           automaticallyImplyLeading: false,\r\n"
                },
                {
                    "date": 1730730424355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,10 +57,10 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n       canPop: false,\r\n-      onPopInvokedWithResult: (didPop) {\r\n-        return false;\r\n+      onPopInvoked: (didPop) {\r\n+        return true;;\r\n       },\r\n       child: Scaffold(\r\n         appBar: AppBar(\r\n           automaticallyImplyLeading: false,\r\n"
                },
                {
                    "date": 1730730435204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,10 +57,10 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n       canPop: false,\r\n-      onPopInvoked: (didPop) {\r\n-        return true;;\r\n+       onPopInvokedWithResult: (didPop) {\r\n+        return true;\r\n       },\r\n       child: Scaffold(\r\n         appBar: AppBar(\r\n           automaticallyImplyLeading: false,\r\n"
                },
                {
                    "date": 1730730491675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n       canPop: false,\r\n        onPopInvokedWithResult: (didPop) {\r\n-        return true;\r\n+        return null;\r\n       },\r\n       child: Scaffold(\r\n         appBar: AppBar(\r\n           automaticallyImplyLeading: false,\r\n"
                },
                {
                    "date": 1730730511235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,93 +56,86 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n-      canPop: false,\r\n-       onPopInvokedWithResult: (didPop) {\r\n-        return null;\r\n-      },\r\n-      child: Scaffold(\r\n-        appBar: AppBar(\r\n-          automaticallyImplyLeading: false,\r\n-          title: const Text('Forgot Password'),\r\n-        ),\r\n-        body: Center(\r\n-          child: Padding(\r\n-            padding: const EdgeInsets.all(16.0),\r\n-            child: Form(\r\n-              key: _formKey,\r\n-              child: Column(\r\n-                mainAxisAlignment: MainAxisAlignment.center,\r\n-                crossAxisAlignment: CrossAxisAlignment.stretch,\r\n-                children: <Widget>[\r\n-                  Image.asset('assets/images/forogot_password.png'),\r\n-                  TextFormField(\r\n-                    controller: emailController,\r\n-                    decoration: const InputDecoration(\r\n-                      labelText: 'Email',\r\n-                      border: OutlineInputBorder(),\r\n-                    ),\r\n-                    validator: (value) {\r\n-                      if (value!.isEmpty) {\r\n-                        return 'Please enter your email';\r\n-                      }\r\n-                      if (!RegExp(r'^[^@]+@[^@]+\\.[^@]+').hasMatch(value)) {\r\n-                        return 'Please enter a valid email address';\r\n-                      }\r\n-                      return null;\r\n-                    },\r\n-                    onSaved: (value) => emailController.text = value!,\r\n+  canPop: false,\r\n+  onPopInvokedWithResult: (didPop) {\r\n+    // Adjust to return a dynamic type, or just return null if no logic is needed.\r\n+    return null;\r\n+  },\r\n+  child: Scaffold(\r\n+    appBar: AppBar(\r\n+      automaticallyImplyLeading: false,\r\n+      title: const Text('Forgot Password'),\r\n+    ),\r\n+    body: Center(\r\n+      child: Padding(\r\n+        padding: const EdgeInsets.all(16.0),\r\n+        child: Form(\r\n+          key: _formKey,\r\n+          child: Column(\r\n+            mainAxisAlignment: MainAxisAlignment.center,\r\n+            crossAxisAlignment: CrossAxisAlignment.stretch,\r\n+            children: <Widget>[\r\n+              Image.asset('assets/images/forogot_password.png'),\r\n+              TextFormField(\r\n+                controller: emailController,\r\n+                decoration: const InputDecoration(\r\n+                  labelText: 'Email',\r\n+                  border: OutlineInputBorder(),\r\n+                ),\r\n+                validator: (value) {\r\n+                  if (value!.isEmpty) {\r\n+                    return 'Please enter your email';\r\n+                  }\r\n+                  if (!RegExp(r'^[^@]+@[^@]+\\.[^@]+').hasMatch(value)) {\r\n+                    return 'Please enter a valid email address';\r\n+                  }\r\n+                  return null;\r\n+                },\r\n+                onSaved: (value) => emailController.text = value!,\r\n+              ),\r\n+              const SizedBox(height: 16.0),\r\n+              ElevatedButton(\r\n+                style: ElevatedButton.styleFrom(\r\n+                  backgroundColor: const Color(0XFF52688F),\r\n+                  shape: RoundedRectangleBorder(\r\n+                    borderRadius: BorderRadius.circular(8.0),\r\n                   ),\r\n-                  const SizedBox(height: 16.0),\r\n-                  ElevatedButton(\r\n-                    style: ElevatedButton.styleFrom(\r\n-                      backgroundColor: const Color(0XFF52688F),\r\n-                      shape: RoundedRectangleBorder(\r\n-                        borderRadius: BorderRadius.circular(8.0),\r\n-                      ),\r\n-                      padding: const EdgeInsets.all(16.0),\r\n+                  padding: const EdgeInsets.all(16.0),\r\n+                ),\r\n+                onPressed: _validateAndSubmit,\r\n+                child: const Text(\r\n+                  'Submit',\r\n+                  style: TextStyle(\r\n+                    fontSize: 18.0,\r\n+                    fontWeight: FontWeight.bold,\r\n+                    color: Colors.white,\r\n+                  ),\r\n+                ),\r\n+              ),\r\n+              const SizedBox(height: 16.0),\r\n+              GestureDetector(\r\n+                onTap: _navigateToSignIn,\r\n+                child: const Row(\r\n+                  children: [\r\n+                    Text('Have an account? '),\r\n+                    SizedBox(\r\n+                      width: 10,\r\n                     ),\r\n-                    onPressed: _validateAndSubmit,\r\n-                    child: const Text(\r\n-                      'Submit',\r\n+                    Text(\r\n+                      'Sign In',\r\n                       style: TextStyle(\r\n-                        fontSize: 18.0,\r\n                         fontWeight: FontWeight.bold,\r\n-                        color: Colors.white,\r\n+                        color: Color(0XFF52688F),\r\n                       ),\r\n                     ),\r\n-                  ),\r\n-                  const SizedBox(height: 16.0),\r\n-                  GestureDetector(\r\n-                    onTap: _navigateToSignIn,\r\n-                    child: const Row(\r\n-                      children: [\r\n-                        Text('Have an account? '),\r\n-                        SizedBox(\r\n-                          width: 10,\r\n-                        ),\r\n-                        Text(\r\n-                          'Sign In',\r\n-                          style: TextStyle(\r\n-                            fontWeight: FontWeight.bold,\r\n-                            color: Color(0XFF52688F),\r\n-                          ),\r\n-                        ),\r\n-                      ],\r\n-                    ),\r\n-                  ),\r\n-                ],\r\n+                  ],\r\n+                ),\r\n               ),\r\n-            ),\r\n+            ],\r\n           ),\r\n         ),\r\n       ),\r\n-    );\r\n-  }\r\n-\r\n-  void _navigateToSignIn() {\r\n-    Navigator.of(context).pushReplacementNamed(\r\n-            LoginScreen.routeName,\r\n-          );\r\n-  }\r\n-}\r\n+    ),\r\n+  ),\r\n+)\r\n"
                },
                {
                    "date": 1730730519142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,86 +56,88 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n-  canPop: false,\r\n-  onPopInvokedWithResult: (didPop) {\r\n-    // Adjust to return a dynamic type, or just return null if no logic is needed.\r\n-    return null;\r\n-  },\r\n-  child: Scaffold(\r\n-    appBar: AppBar(\r\n-      automaticallyImplyLeading: false,\r\n-      title: const Text('Forgot Password'),\r\n-    ),\r\n-    body: Center(\r\n-      child: Padding(\r\n-        padding: const EdgeInsets.all(16.0),\r\n-        child: Form(\r\n-          key: _formKey,\r\n-          child: Column(\r\n-            mainAxisAlignment: MainAxisAlignment.center,\r\n-            crossAxisAlignment: CrossAxisAlignment.stretch,\r\n-            children: <Widget>[\r\n-              Image.asset('assets/images/forogot_password.png'),\r\n-              TextFormField(\r\n-                controller: emailController,\r\n-                decoration: const InputDecoration(\r\n-                  labelText: 'Email',\r\n-                  border: OutlineInputBorder(),\r\n-                ),\r\n-                validator: (value) {\r\n-                  if (value!.isEmpty) {\r\n-                    return 'Please enter your email';\r\n-                  }\r\n-                  if (!RegExp(r'^[^@]+@[^@]+\\.[^@]+').hasMatch(value)) {\r\n-                    return 'Please enter a valid email address';\r\n-                  }\r\n-                  return null;\r\n-                },\r\n-                onSaved: (value) => emailController.text = value!,\r\n-              ),\r\n-              const SizedBox(height: 16.0),\r\n-              ElevatedButton(\r\n-                style: ElevatedButton.styleFrom(\r\n-                  backgroundColor: const Color(0XFF52688F),\r\n-                  shape: RoundedRectangleBorder(\r\n-                    borderRadius: BorderRadius.circular(8.0),\r\n+      canPop: false,\r\n+      onPopInvokedWithResult: (didPop) {\r\n+        // Adjust to return a dynamic type, or just return null if no logic is needed.\r\n+        return null;\r\n+      },\r\n+      child: Scaffold(\r\n+        appBar: AppBar(\r\n+          automaticallyImplyLeading: false,\r\n+          title: const Text('Forgot Password'),\r\n+        ),\r\n+        body: Center(\r\n+          child: Padding(\r\n+            padding: const EdgeInsets.all(16.0),\r\n+            child: Form(\r\n+              key: _formKey,\r\n+              child: Column(\r\n+                mainAxisAlignment: MainAxisAlignment.center,\r\n+                crossAxisAlignment: CrossAxisAlignment.stretch,\r\n+                children: <Widget>[\r\n+                  Image.asset('assets/images/forogot_password.png'),\r\n+                  TextFormField(\r\n+                    controller: emailController,\r\n+                    decoration: const InputDecoration(\r\n+                      labelText: 'Email',\r\n+                      border: OutlineInputBorder(),\r\n+                    ),\r\n+                    validator: (value) {\r\n+                      if (value!.isEmpty) {\r\n+                        return 'Please enter your email';\r\n+                      }\r\n+                      if (!RegExp(r'^[^@]+@[^@]+\\.[^@]+').hasMatch(value)) {\r\n+                        return 'Please enter a valid email address';\r\n+                      }\r\n+                      return null;\r\n+                    },\r\n+                    onSaved: (value) => emailController.text = value!,\r\n                   ),\r\n-                  padding: const EdgeInsets.all(16.0),\r\n-                ),\r\n-                onPressed: _validateAndSubmit,\r\n-                child: const Text(\r\n-                  'Submit',\r\n-                  style: TextStyle(\r\n-                    fontSize: 18.0,\r\n-                    fontWeight: FontWeight.bold,\r\n-                    color: Colors.white,\r\n-                  ),\r\n-                ),\r\n-              ),\r\n-              const SizedBox(height: 16.0),\r\n-              GestureDetector(\r\n-                onTap: _navigateToSignIn,\r\n-                child: const Row(\r\n-                  children: [\r\n-                    Text('Have an account? '),\r\n-                    SizedBox(\r\n-                      width: 10,\r\n+                  const SizedBox(height: 16.0),\r\n+                  ElevatedButton(\r\n+                    style: ElevatedButton.styleFrom(\r\n+                      backgroundColor: const Color(0XFF52688F),\r\n+                      shape: RoundedRectangleBorder(\r\n+                        borderRadius: BorderRadius.circular(8.0),\r\n+                      ),\r\n+                      padding: const EdgeInsets.all(16.0),\r\n                     ),\r\n-                    Text(\r\n-                      'Sign In',\r\n+                    onPressed: _validateAndSubmit,\r\n+                    child: const Text(\r\n+                      'Submit',\r\n                       style: TextStyle(\r\n+                        fontSize: 18.0,\r\n                         fontWeight: FontWeight.bold,\r\n-                        color: Color(0XFF52688F),\r\n+                        color: Colors.white,\r\n                       ),\r\n                     ),\r\n-                  ],\r\n-                ),\r\n+                  ),\r\n+                  const SizedBox(height: 16.0),\r\n+                  GestureDetector(\r\n+                    onTap: _navigateToSignIn,\r\n+                    child: const Row(\r\n+                      children: [\r\n+                        Text('Have an account? '),\r\n+                        SizedBox(\r\n+                          width: 10,\r\n+                        ),\r\n+                        Text(\r\n+                          'Sign In',\r\n+                          style: TextStyle(\r\n+                            fontWeight: FontWeight.bold,\r\n+                            color: Color(0XFF52688F),\r\n+                          ),\r\n+                        ),\r\n+                      ],\r\n+                    ),\r\n+                  ),\r\n+                ],\r\n               ),\r\n-            ],\r\n+            ),\r\n           ),\r\n         ),\r\n       ),\r\n-    ),\r\n-  ),\r\n-)\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1730730524517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,10 +57,9 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n       canPop: false,\r\n-      onPopInvokedWithResult: (didPop) {\r\n-        // Adjust to return a dynamic type, or just return null if no logic is needed.\r\n+       onPopInvokedWithResult: (didPop) {\r\n         return null;\r\n       },\r\n       child: Scaffold(\r\n         appBar: AppBar(\r\n@@ -139,5 +138,11 @@\n         ),\r\n       ),\r\n     );\r\n   }\r\n+\r\n+  void _navigateToSignIn() {\r\n+    Navigator.of(context).pushReplacementNamed(\r\n+            LoginScreen.routeName,\r\n+          );\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1730730539115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,89 +56,91 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n-      canPop: false,\r\n-       onPopInvokedWithResult: (didPop) {\r\n-        return null;\r\n-      },\r\n-      child: Scaffold(\r\n-        appBar: AppBar(\r\n-          automaticallyImplyLeading: false,\r\n-          title: const Text('Forgot Password'),\r\n-        ),\r\n-        body: Center(\r\n-          child: Padding(\r\n-            padding: const EdgeInsets.all(16.0),\r\n-            child: Form(\r\n-              key: _formKey,\r\n-              child: Column(\r\n-                mainAxisAlignment: MainAxisAlignment.center,\r\n-                crossAxisAlignment: CrossAxisAlignment.stretch,\r\n-                children: <Widget>[\r\n-                  Image.asset('assets/images/forogot_password.png'),\r\n-                  TextFormField(\r\n-                    controller: emailController,\r\n-                    decoration: const InputDecoration(\r\n-                      labelText: 'Email',\r\n-                      border: OutlineInputBorder(),\r\n-                    ),\r\n-                    validator: (value) {\r\n-                      if (value!.isEmpty) {\r\n-                        return 'Please enter your email';\r\n-                      }\r\n-                      if (!RegExp(r'^[^@]+@[^@]+\\.[^@]+').hasMatch(value)) {\r\n-                        return 'Please enter a valid email address';\r\n-                      }\r\n-                      return null;\r\n-                    },\r\n-                    onSaved: (value) => emailController.text = value!,\r\n+  canPop: false,\r\n+  onPopInvokedWithResult: (didPop) {\r\n+    // Adjust to return a dynamic type, or just return null if no logic is needed.\r\n+    return null;\r\n+  },\r\n+  child: Scaffold(\r\n+    appBar: AppBar(\r\n+      automaticallyImplyLeading: false,\r\n+      title: const Text('Forgot Password'),\r\n+    ),\r\n+    body: Center(\r\n+      child: Padding(\r\n+        padding: const EdgeInsets.all(16.0),\r\n+        child: Form(\r\n+          key: _formKey,\r\n+          child: Column(\r\n+            mainAxisAlignment: MainAxisAlignment.center,\r\n+            crossAxisAlignment: CrossAxisAlignment.stretch,\r\n+            children: <Widget>[\r\n+              Image.asset('assets/images/forogot_password.png'),\r\n+              TextFormField(\r\n+                controller: emailController,\r\n+                decoration: const InputDecoration(\r\n+                  labelText: 'Email',\r\n+                  border: OutlineInputBorder(),\r\n+                ),\r\n+                validator: (value) {\r\n+                  if (value!.isEmpty) {\r\n+                    return 'Please enter your email';\r\n+                  }\r\n+                  if (!RegExp(r'^[^@]+@[^@]+\\.[^@]+').hasMatch(value)) {\r\n+                    return 'Please enter a valid email address';\r\n+                  }\r\n+                  return null;\r\n+                },\r\n+                onSaved: (value) => emailController.text = value!,\r\n+              ),\r\n+              const SizedBox(height: 16.0),\r\n+              ElevatedButton(\r\n+                style: ElevatedButton.styleFrom(\r\n+                  backgroundColor: const Color(0XFF52688F),\r\n+                  shape: RoundedRectangleBorder(\r\n+                    borderRadius: BorderRadius.circular(8.0),\r\n                   ),\r\n-                  const SizedBox(height: 16.0),\r\n-                  ElevatedButton(\r\n-                    style: ElevatedButton.styleFrom(\r\n-                      backgroundColor: const Color(0XFF52688F),\r\n-                      shape: RoundedRectangleBorder(\r\n-                        borderRadius: BorderRadius.circular(8.0),\r\n-                      ),\r\n-                      padding: const EdgeInsets.all(16.0),\r\n+                  padding: const EdgeInsets.all(16.0),\r\n+                ),\r\n+                onPressed: _validateAndSubmit,\r\n+                child: const Text(\r\n+                  'Submit',\r\n+                  style: TextStyle(\r\n+                    fontSize: 18.0,\r\n+                    fontWeight: FontWeight.bold,\r\n+                    color: Colors.white,\r\n+                  ),\r\n+                ),\r\n+              ),\r\n+              const SizedBox(height: 16.0),\r\n+              GestureDetector(\r\n+                onTap: _navigateToSignIn,\r\n+                child: const Row(\r\n+                  children: [\r\n+                    Text('Have an account? '),\r\n+                    SizedBox(\r\n+                      width: 10,\r\n                     ),\r\n-                    onPressed: _validateAndSubmit,\r\n-                    child: const Text(\r\n-                      'Submit',\r\n+                    Text(\r\n+                      'Sign In',\r\n                       style: TextStyle(\r\n-                        fontSize: 18.0,\r\n                         fontWeight: FontWeight.bold,\r\n-                        color: Colors.white,\r\n+                        color: Color(0XFF52688F),\r\n                       ),\r\n                     ),\r\n-                  ),\r\n-                  const SizedBox(height: 16.0),\r\n-                  GestureDetector(\r\n-                    onTap: _navigateToSignIn,\r\n-                    child: const Row(\r\n-                      children: [\r\n-                        Text('Have an account? '),\r\n-                        SizedBox(\r\n-                          width: 10,\r\n-                        ),\r\n-                        Text(\r\n-                          'Sign In',\r\n-                          style: TextStyle(\r\n-                            fontWeight: FontWeight.bold,\r\n-                            color: Color(0XFF52688F),\r\n-                          ),\r\n-                        ),\r\n-                      ],\r\n-                    ),\r\n-                  ),\r\n-                ],\r\n+                  ],\r\n+                ),\r\n               ),\r\n-            ),\r\n+            ],\r\n           ),\r\n         ),\r\n       ),\r\n-    );\r\n+    ),\r\n+  ),\r\n+)\r\n+;\r\n   }\r\n \r\n   void _navigateToSignIn() {\r\n     Navigator.of(context).pushReplacementNamed(\r\n"
                },
                {
                    "date": 1730730570258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,10 +58,9 @@\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n   canPop: false,\r\n   onPopInvokedWithResult: (didPop) {\r\n-    // Adjust to return a dynamic type, or just return null if no logic is needed.\r\n-    return null;\r\n+  \r\n   },\r\n   child: Scaffold(\r\n     appBar: AppBar(\r\n       automaticallyImplyLeading: false,\r\n"
                },
                {
                    "date": 1730730579824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,8 @@\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n   canPop: false,\r\n   onPopInvokedWithResult: (didPop) {\r\n-  \r\n   },\r\n   child: Scaffold(\r\n     appBar: AppBar(\r\n       automaticallyImplyLeading: false,\r\n"
                },
                {
                    "date": 1730730610391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import 'package:todo_app/auth/login_screen.dart';\r\n \r\n class ForgotPassword extends StatefulWidget {\r\n   const ForgotPassword({super.key});\r\n-  static const String routeName = '/forgot-password';\r\n+  static const String routeName = '/register';\r\n   @override\r\n   State<ForgotPassword> createState() => _ForgotPasswordState();\r\n }\r\n \r\n@@ -56,89 +56,89 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n-  canPop: false,\r\n-  onPopInvokedWithResult: (didPop) {\r\n-  },\r\n-  child: Scaffold(\r\n-    appBar: AppBar(\r\n-      automaticallyImplyLeading: false,\r\n-      title: const Text('Forgot Password'),\r\n-    ),\r\n-    body: Center(\r\n-      child: Padding(\r\n-        padding: const EdgeInsets.all(16.0),\r\n-        child: Form(\r\n-          key: _formKey,\r\n-          child: Column(\r\n-            mainAxisAlignment: MainAxisAlignment.center,\r\n-            crossAxisAlignment: CrossAxisAlignment.stretch,\r\n-            children: <Widget>[\r\n-              Image.asset('assets/images/forogot_password.png'),\r\n-              TextFormField(\r\n-                controller: emailController,\r\n-                decoration: const InputDecoration(\r\n-                  labelText: 'Email',\r\n-                  border: OutlineInputBorder(),\r\n-                ),\r\n-                validator: (value) {\r\n-                  if (value!.isEmpty) {\r\n-                    return 'Please enter your email';\r\n-                  }\r\n-                  if (!RegExp(r'^[^@]+@[^@]+\\.[^@]+').hasMatch(value)) {\r\n-                    return 'Please enter a valid email address';\r\n-                  }\r\n-                  return null;\r\n-                },\r\n-                onSaved: (value) => emailController.text = value!,\r\n-              ),\r\n-              const SizedBox(height: 16.0),\r\n-              ElevatedButton(\r\n-                style: ElevatedButton.styleFrom(\r\n-                  backgroundColor: const Color(0XFF52688F),\r\n-                  shape: RoundedRectangleBorder(\r\n-                    borderRadius: BorderRadius.circular(8.0),\r\n+      canPop: false,\r\n+      onPopInvoked: (didPop) {\r\n+        return;\r\n+      },\r\n+      child: Scaffold(\r\n+        appBar: AppBar(\r\n+          automaticallyImplyLeading: false,\r\n+          title: const Text('Forgot Password'),\r\n+        ),\r\n+        body: Center(\r\n+          child: Padding(\r\n+            padding: const EdgeInsets.all(16.0),\r\n+            child: Form(\r\n+              key: _formKey,\r\n+              child: Column(\r\n+                mainAxisAlignment: MainAxisAlignment.center,\r\n+                crossAxisAlignment: CrossAxisAlignment.stretch,\r\n+                children: <Widget>[\r\n+                  Image.asset('assets/images/forogot_password.png'),\r\n+                  TextFormField(\r\n+                    controller: emailController,\r\n+                    decoration: const InputDecoration(\r\n+                      labelText: 'Email',\r\n+                      border: OutlineInputBorder(),\r\n+                    ),\r\n+                    validator: (value) {\r\n+                      if (value!.isEmpty) {\r\n+                        return 'Please enter your email';\r\n+                      }\r\n+                      if (!RegExp(r'^[^@]+@[^@]+\\.[^@]+').hasMatch(value)) {\r\n+                        return 'Please enter a valid email address';\r\n+                      }\r\n+                      return null;\r\n+                    },\r\n+                    onSaved: (value) => emailController.text = value!,\r\n                   ),\r\n-                  padding: const EdgeInsets.all(16.0),\r\n-                ),\r\n-                onPressed: _validateAndSubmit,\r\n-                child: const Text(\r\n-                  'Submit',\r\n-                  style: TextStyle(\r\n-                    fontSize: 18.0,\r\n-                    fontWeight: FontWeight.bold,\r\n-                    color: Colors.white,\r\n-                  ),\r\n-                ),\r\n-              ),\r\n-              const SizedBox(height: 16.0),\r\n-              GestureDetector(\r\n-                onTap: _navigateToSignIn,\r\n-                child: const Row(\r\n-                  children: [\r\n-                    Text('Have an account? '),\r\n-                    SizedBox(\r\n-                      width: 10,\r\n+                  const SizedBox(height: 16.0),\r\n+                  ElevatedButton(\r\n+                    style: ElevatedButton.styleFrom(\r\n+                      backgroundColor: const Color(0XFF52688F),\r\n+                      shape: RoundedRectangleBorder(\r\n+                        borderRadius: BorderRadius.circular(8.0),\r\n+                      ),\r\n+                      padding: const EdgeInsets.all(16.0),\r\n                     ),\r\n-                    Text(\r\n-                      'Sign In',\r\n+                    onPressed: _validateAndSubmit,\r\n+                    child: const Text(\r\n+                      'Submit',\r\n                       style: TextStyle(\r\n+                        fontSize: 18.0,\r\n                         fontWeight: FontWeight.bold,\r\n-                        color: Color(0XFF52688F),\r\n+                        color: Colors.white,\r\n                       ),\r\n                     ),\r\n-                  ],\r\n-                ),\r\n+                  ),\r\n+                  const SizedBox(height: 16.0),\r\n+                  GestureDetector(\r\n+                    onTap: _navigateToSignIn,\r\n+                    child: const Row(\r\n+                      children: [\r\n+                        Text('Have an account? '),\r\n+                        SizedBox(\r\n+                          width: 10,\r\n+                        ),\r\n+                        Text(\r\n+                          'Sign In',\r\n+                          style: TextStyle(\r\n+                            fontWeight: FontWeight.bold,\r\n+                            color: Color(0XFF52688F),\r\n+                          ),\r\n+                        ),\r\n+                      ],\r\n+                    ),\r\n+                  ),\r\n+                ],\r\n               ),\r\n-            ],\r\n+            ),\r\n           ),\r\n         ),\r\n       ),\r\n-    ),\r\n-  ),\r\n-)\r\n-;\r\n+    );\r\n   }\r\n \r\n   void _navigateToSignIn() {\r\n     Navigator.of(context).pushReplacementNamed(\r\n"
                },
                {
                    "date": 1730730746790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import 'package:todo_app/auth/login_screen.dart';\r\n \r\n class ForgotPassword extends StatefulWidget {\r\n   const ForgotPassword({super.key});\r\n-  static const String routeName = '/register';\r\n+  static const String routeName = '/forgot-password';\r\n   @override\r\n   State<ForgotPassword> createState() => _ForgotPasswordState();\r\n }\r\n \r\n@@ -57,11 +57,9 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n       canPop: false,\r\n-      onPopInvoked: (didPop) {\r\n-        return;\r\n-      },\r\n+     \r\n       child: Scaffold(\r\n         appBar: AppBar(\r\n           automaticallyImplyLeading: false,\r\n           title: const Text('Forgot Password'),\r\n"
                },
                {
                    "date": 1730730752541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n       canPop: false,\r\n-     \r\n+     onPopInvokedWithResult:\r\n       child: Scaffold(\r\n         appBar: AppBar(\r\n           automaticallyImplyLeading: false,\r\n           title: const Text('Forgot Password'),\r\n"
                },
                {
                    "date": 1730730761015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return PopScope(\r\n       canPop: false,\r\n-     onPopInvokedWithResult:(){}\r\n+     onPopInvokedWithResult\r\n       child: Scaffold(\r\n         appBar: AppBar(\r\n           automaticallyImplyLeading: false,\r\n           title: const Text('Forgot Password'),\r\n"
                },
                {
                    "date": 1730731105634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,143 @@\n+import 'package:flutter/material.dart';\r\n+import 'package:firebase_auth/firebase_auth.dart';\r\n+import 'package:todo_app/auth/login_screen.dart';\r\n+\r\n+class ForgotPassword extends StatefulWidget {\r\n+  const ForgotPassword({super.key});\r\n+  static const String routeName = '/forgot-password';\r\n+  @override\r\n+  State<ForgotPassword> createState() => _ForgotPasswordState();\r\n+}\r\n+\r\n+class _ForgotPasswordState extends State<ForgotPassword> {\r\n+  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();\r\n+  TextEditingController emailController = TextEditingController();\r\n+\r\n+  bool _validateAndSave() {\r\n+    final form = _formKey.currentState;\r\n+    if (form!.validate()) {\r\n+      form.save();\r\n+      return true;\r\n+    }\r\n+    return false;\r\n+  }\r\n+\r\n+  void _validateAndSubmit() async {\r\n+    if (_validateAndSave()) {\r\n+      try {\r\n+        await FirebaseAuth.instance\r\n+            .sendPasswordResetEmail(email: emailController.text);\r\n+        _showDialog('Password Reset Email Sent',\r\n+            'Check your email for the password reset link.');\r\n+      } catch (error) {\r\n+        _showDialog('Error', error.toString());\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  void _showDialog(String title, String content) {\r\n+    showDialog(\r\n+      context: context,\r\n+      builder: (BuildContext context) {\r\n+        return AlertDialog(\r\n+          title: Text(title),\r\n+          content: Text(content),\r\n+          actions: <Widget>[\r\n+            TextButton(\r\n+              child: const Text('OK', style: TextStyle(color: Colors.blue)),\r\n+              onPressed: () {\r\n+                Navigator.of(context).pop();\r\n+              },\r\n+            ),\r\n+          ],\r\n+        );\r\n+      },\r\n+    );\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Scaffold(\r\n+      appBar: AppBar(\r\n+        automaticallyImplyLeading: false,\r\n+        title: const Text('Forgot Password'),\r\n+      ),\r\n+      body: Center(\r\n+        child: Padding(\r\n+          padding: const EdgeInsets.all(16.0),\r\n+          child: Form(\r\n+            key: _formKey,\r\n+            child: Column(\r\n+              mainAxisAlignment: MainAxisAlignment.center,\r\n+              crossAxisAlignment: CrossAxisAlignment.stretch,\r\n+              children: <Widget>[\r\n+                Image.asset('assets/images/forgot_password.png'),\r\n+                TextFormField(\r\n+                  controller: emailController,\r\n+                  decoration: const InputDecoration(\r\n+                    labelText: 'Email',\r\n+                    border: OutlineInputBorder(),\r\n+                  ),\r\n+                  validator: (value) {\r\n+                    if (value!.isEmpty) {\r\n+                      return 'Please enter your email';\r\n+                    }\r\n+                    if (!RegExp(r'^[^@]+@[^@]+\\.[^@]+').hasMatch(value)) {\r\n+                      return 'Please enter a valid email address';\r\n+                    }\r\n+                    return null;\r\n+                  },\r\n+                  onSaved: (value) => emailController.text = value!,\r\n+                ),\r\n+                const SizedBox(height: 16.0),\r\n+                ElevatedButton(\r\n+                  style: ElevatedButton.styleFrom(\r\n+                    backgroundColor: const Color(0XFF52688F),\r\n+                    shape: RoundedRectangleBorder(\r\n+                      borderRadius: BorderRadius.circular(8.0),\r\n+                    ),\r\n+                    padding: const EdgeInsets.all(16.0),\r\n+                  ),\r\n+                  onPressed: _validateAndSubmit,\r\n+                  child: const Text(\r\n+                    'Submit',\r\n+                    style: TextStyle(\r\n+                      fontSize: 18.0,\r\n+                      fontWeight: FontWeight.bold,\r\n+                      color: Colors.white,\r\n+                    ),\r\n+                  ),\r\n+                ),\r\n+                const SizedBox(height: 16.0),\r\n+                GestureDetector(\r\n+                  onTap: _navigateToSignIn,\r\n+                  child: const Row(\r\n+                    children: [\r\n+                      Text('Have an account? '),\r\n+                      SizedBox(\r\n+                        width: 10,\r\n+                      ),\r\n+                      Text(\r\n+                        'Sign In',\r\n+                        style: TextStyle(\r\n+                          fontWeight: FontWeight.bold,\r\n+                          color: Color(0XFF52688F),\r\n+                        ),\r\n+                      ),\r\n+                    ],\r\n+                  ),\r\n+                ),\r\n+              ],\r\n+            ),\r\n+          ),\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  void _navigateToSignIn() {\r\n+    Navigator.of(context).pushReplacementNamed(\r\n+      LoginScreen.routeName,\r\n+    );\r\n+  }\r\n+}\r\n"
                }
            ],
            "date": 1730727985338,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:firebase_auth/firebase_auth.dart';\r\n\r\nclass ForgotPassword extends StatefulWidget {\r\n  const ForgotPassword({super.key});\r\n\r\n  @override\r\n  State<ForgotPassword> createState() => _ForgotPasswordState();\r\n}\r\n\r\nclass _ForgotPasswordState extends State<ForgotPassword> {\r\n  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();\r\n  TextEditingController emailController = TextEditingController();\r\n  bool _validateAndSave() {\r\n    final form = _formKey.currentState;\r\n    if (form!.validate()) {\r\n      form.save();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  void _validateAndSubmit() async {\r\n    if (_validateAndSave()) {\r\n      try {\r\n        await FirebaseAuth.instance\r\n            .sendPasswordResetEmail(email: emailController.text);\r\n        _showDialog('Password Reset Email Sent',\r\n            'Check your email for the password reset link.');\r\n      } catch (error) {\r\n        _showDialog('Error', error.toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  void _showDialog(String title, String content) {\r\n    showDialog(\r\n      context: context,\r\n      builder: (BuildContext context) {\r\n        return AlertDialog(\r\n          title: Text(title),\r\n          content: Text(content),\r\n          actions: <Widget>[\r\n            TextButton(\r\n              child: const Text('OK', style: TextStyle(color: Colors.blue)),\r\n              onPressed: () {\r\n                Navigator.of(context).pop();\r\n              },\r\n            ),\r\n          ],\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return PopScope(\r\n      canPop: false,\r\n      onPopInvoked: (didPop) {\r\n        return;\r\n      },\r\n      child: Scaffold(\r\n        appBar: AppBar(\r\n          automaticallyImplyLeading: false,\r\n          title: const Text('Forgot Password'),\r\n        ),\r\n        body: Center(\r\n          child: Padding(\r\n            padding: const EdgeInsets.all(16.0),\r\n            child: Form(\r\n              key: _formKey,\r\n              child: Column(\r\n                mainAxisAlignment: MainAxisAlignment.center,\r\n                crossAxisAlignment: CrossAxisAlignment.stretch,\r\n                children: <Widget>[\r\n                  Image.asset('assets/images/forogot_password.png'),\r\n                  TextFormField(\r\n                    controller: emailController,\r\n                    decoration: const InputDecoration(\r\n                      labelText: 'Email',\r\n                      border: OutlineInputBorder(),\r\n                    ),\r\n                    validator: (value) {\r\n                      if (value!.isEmpty) {\r\n                        return 'Please enter your email';\r\n                      }\r\n                      if (!RegExp(r'^[^@]+@[^@]+\\.[^@]+').hasMatch(value)) {\r\n                        return 'Please enter a valid email address';\r\n                      }\r\n                      return null;\r\n                    },\r\n                    onSaved: (value) => emailController.text = value!,\r\n                  ),\r\n                  const SizedBox(height: 16.0),\r\n                  ElevatedButton(\r\n                    style: ElevatedButton.styleFrom(\r\n                      backgroundColor: const Color(0XFF52688F),\r\n                      shape: RoundedRectangleBorder(\r\n                        borderRadius: BorderRadius.circular(8.0),\r\n                      ),\r\n                      padding: const EdgeInsets.all(16.0),\r\n                    ),\r\n                    onPressed: _validateAndSubmit,\r\n                    child: const Text(\r\n                      'Submit',\r\n                      style: TextStyle(\r\n                        fontSize: 18.0,\r\n                        fontWeight: FontWeight.bold,\r\n                        color: Colors.white,\r\n                      ),\r\n                    ),\r\n                  ),\r\n                  const SizedBox(height: 16.0),\r\n                  GestureDetector(\r\n                    onTap: _navigateToSignIn,\r\n                    child: const Row(\r\n                      children: [\r\n                        Text('Have an account? '),\r\n                        SizedBox(\r\n                          width: 10,\r\n                        ),\r\n                        Text(\r\n                          'Sign In',\r\n                          style: TextStyle(\r\n                            fontWeight: FontWeight.bold,\r\n                            color: Color(0XFF52688F),\r\n                          ),\r\n                        ),\r\n                      ],\r\n                    ),\r\n                  ),\r\n                ],\r\n              ),\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  void _navigateToSignIn() {\r\n    Navigator.pushReplacement(\r\n      context,\r\n      MaterialPageRoute(builder: (context) => const LoginPage()),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}